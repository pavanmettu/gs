syntax = "proto3";
package gossip;
option go_package = "simplegossip/";


message SubmitMessageStruct {
	int32 nodeid   = 1;
	string gmessage = 2;
}

message SubmitMessageRes {
	bool messageadded = 1;
	string messageid  = 2;
}

message GossipMessageStruct {
	int32  sendernodeid      = 1;
	int32  rcvrnodeid        = 2;
	string  gmessage          = 3;
	repeated int32 nodepaths = 4;
}

message GossipMessageRes {
	int32 rcvrnodeid  = 1;
	bool msgaccepted   = 2;
}

message ResyncMessagesStruct {
	int32 nodeid = 1;
}

message MsgFromNode {
	string message 		 = 1;
	repeated uint32 nodepath = 2;
}

message ResyncMessagesRes {
	int32 fromnodeid              = 1;
	repeated MsgFromNode gmessages = 2;
}

message ListMessageStruct {
	int32 nodeid     = 1;
	int32 nummsgs    = 2;
}

message ListMessageRes {
	bool moremessages              = 1;
	repeated string gmessages = 2;
}

message QueryMessageStruct {
	int32 nodeid    = 1;
	string messageid = 2;
}

message QueryMessageRes {
	bool messagefound      = 1;
	MsgFromNode gmessage   = 2;
}


service GossipService {
	rpc SubmitMessage (SubmitMessageStruct) returns (SubmitMessageRes) {}
	rpc QueryMessage (QueryMessageStruct) returns (QueryMessageRes) {}
	rpc ListMessage (ListMessageStruct) returns (ListMessageRes) {}
	rpc GossipMessage (GossipMessageStruct) returns (GossipMessageRes) {}
	rpc ResyncMessages (ResyncMessagesStruct) returns (ResyncMessagesRes) {}
}




