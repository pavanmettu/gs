// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.3
// source: simplegossip.proto

package simplegossip

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitMessageStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodeid   int32  `protobuf:"varint,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	Gmessage string `protobuf:"bytes,2,opt,name=gmessage,proto3" json:"gmessage,omitempty"`
}

func (x *SubmitMessageStruct) Reset() {
	*x = SubmitMessageStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitMessageStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMessageStruct) ProtoMessage() {}

func (x *SubmitMessageStruct) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMessageStruct.ProtoReflect.Descriptor instead.
func (*SubmitMessageStruct) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitMessageStruct) GetNodeid() int32 {
	if x != nil {
		return x.Nodeid
	}
	return 0
}

func (x *SubmitMessageStruct) GetGmessage() string {
	if x != nil {
		return x.Gmessage
	}
	return ""
}

type SubmitMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messageadded bool   `protobuf:"varint,1,opt,name=messageadded,proto3" json:"messageadded,omitempty"`
	Messageid    string `protobuf:"bytes,2,opt,name=messageid,proto3" json:"messageid,omitempty"`
}

func (x *SubmitMessageRes) Reset() {
	*x = SubmitMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitMessageRes) ProtoMessage() {}

func (x *SubmitMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitMessageRes.ProtoReflect.Descriptor instead.
func (*SubmitMessageRes) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitMessageRes) GetMessageadded() bool {
	if x != nil {
		return x.Messageadded
	}
	return false
}

func (x *SubmitMessageRes) GetMessageid() string {
	if x != nil {
		return x.Messageid
	}
	return ""
}

type GossipMessageStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sendernodeid int32   `protobuf:"varint,1,opt,name=sendernodeid,proto3" json:"sendernodeid,omitempty"`
	Rcvrnodeid   int32   `protobuf:"varint,2,opt,name=rcvrnodeid,proto3" json:"rcvrnodeid,omitempty"`
	Gmessage     string  `protobuf:"bytes,3,opt,name=gmessage,proto3" json:"gmessage,omitempty"`
	Nodepaths    []int32 `protobuf:"varint,4,rep,packed,name=nodepaths,proto3" json:"nodepaths,omitempty"`
}

func (x *GossipMessageStruct) Reset() {
	*x = GossipMessageStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipMessageStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipMessageStruct) ProtoMessage() {}

func (x *GossipMessageStruct) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipMessageStruct.ProtoReflect.Descriptor instead.
func (*GossipMessageStruct) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{2}
}

func (x *GossipMessageStruct) GetSendernodeid() int32 {
	if x != nil {
		return x.Sendernodeid
	}
	return 0
}

func (x *GossipMessageStruct) GetRcvrnodeid() int32 {
	if x != nil {
		return x.Rcvrnodeid
	}
	return 0
}

func (x *GossipMessageStruct) GetGmessage() string {
	if x != nil {
		return x.Gmessage
	}
	return ""
}

func (x *GossipMessageStruct) GetNodepaths() []int32 {
	if x != nil {
		return x.Nodepaths
	}
	return nil
}

type GossipMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rcvrnodeid  int32 `protobuf:"varint,1,opt,name=rcvrnodeid,proto3" json:"rcvrnodeid,omitempty"`
	Msgaccepted bool  `protobuf:"varint,2,opt,name=msgaccepted,proto3" json:"msgaccepted,omitempty"`
}

func (x *GossipMessageRes) Reset() {
	*x = GossipMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipMessageRes) ProtoMessage() {}

func (x *GossipMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipMessageRes.ProtoReflect.Descriptor instead.
func (*GossipMessageRes) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{3}
}

func (x *GossipMessageRes) GetRcvrnodeid() int32 {
	if x != nil {
		return x.Rcvrnodeid
	}
	return 0
}

func (x *GossipMessageRes) GetMsgaccepted() bool {
	if x != nil {
		return x.Msgaccepted
	}
	return false
}

type ResyncMessagesStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodeid int32 `protobuf:"varint,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
}

func (x *ResyncMessagesStruct) Reset() {
	*x = ResyncMessagesStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResyncMessagesStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResyncMessagesStruct) ProtoMessage() {}

func (x *ResyncMessagesStruct) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResyncMessagesStruct.ProtoReflect.Descriptor instead.
func (*ResyncMessagesStruct) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{4}
}

func (x *ResyncMessagesStruct) GetNodeid() int32 {
	if x != nil {
		return x.Nodeid
	}
	return 0
}

type MsgFromNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string  `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Nodepath []int32 `protobuf:"varint,2,rep,packed,name=nodepath,proto3" json:"nodepath,omitempty"`
}

func (x *MsgFromNode) Reset() {
	*x = MsgFromNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFromNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFromNode) ProtoMessage() {}

func (x *MsgFromNode) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFromNode.ProtoReflect.Descriptor instead.
func (*MsgFromNode) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{5}
}

func (x *MsgFromNode) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MsgFromNode) GetNodepath() []int32 {
	if x != nil {
		return x.Nodepath
	}
	return nil
}

type ResyncMessagesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fromnodeid int32          `protobuf:"varint,1,opt,name=fromnodeid,proto3" json:"fromnodeid,omitempty"`
	Gmessages  []*MsgFromNode `protobuf:"bytes,2,rep,name=gmessages,proto3" json:"gmessages,omitempty"`
}

func (x *ResyncMessagesRes) Reset() {
	*x = ResyncMessagesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResyncMessagesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResyncMessagesRes) ProtoMessage() {}

func (x *ResyncMessagesRes) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResyncMessagesRes.ProtoReflect.Descriptor instead.
func (*ResyncMessagesRes) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{6}
}

func (x *ResyncMessagesRes) GetFromnodeid() int32 {
	if x != nil {
		return x.Fromnodeid
	}
	return 0
}

func (x *ResyncMessagesRes) GetGmessages() []*MsgFromNode {
	if x != nil {
		return x.Gmessages
	}
	return nil
}

type ListMessageStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodeid  int32 `protobuf:"varint,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	Nummsgs int32 `protobuf:"varint,2,opt,name=nummsgs,proto3" json:"nummsgs,omitempty"`
}

func (x *ListMessageStruct) Reset() {
	*x = ListMessageStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessageStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageStruct) ProtoMessage() {}

func (x *ListMessageStruct) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageStruct.ProtoReflect.Descriptor instead.
func (*ListMessageStruct) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{7}
}

func (x *ListMessageStruct) GetNodeid() int32 {
	if x != nil {
		return x.Nodeid
	}
	return 0
}

func (x *ListMessageStruct) GetNummsgs() int32 {
	if x != nil {
		return x.Nummsgs
	}
	return 0
}

type ListMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moremessages bool     `protobuf:"varint,1,opt,name=moremessages,proto3" json:"moremessages,omitempty"`
	Gmessages    []string `protobuf:"bytes,2,rep,name=gmessages,proto3" json:"gmessages,omitempty"`
}

func (x *ListMessageRes) Reset() {
	*x = ListMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessageRes) ProtoMessage() {}

func (x *ListMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessageRes.ProtoReflect.Descriptor instead.
func (*ListMessageRes) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{8}
}

func (x *ListMessageRes) GetMoremessages() bool {
	if x != nil {
		return x.Moremessages
	}
	return false
}

func (x *ListMessageRes) GetGmessages() []string {
	if x != nil {
		return x.Gmessages
	}
	return nil
}

type QueryMessageStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodeid    int32  `protobuf:"varint,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	Messageid string `protobuf:"bytes,2,opt,name=messageid,proto3" json:"messageid,omitempty"`
}

func (x *QueryMessageStruct) Reset() {
	*x = QueryMessageStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMessageStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMessageStruct) ProtoMessage() {}

func (x *QueryMessageStruct) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMessageStruct.ProtoReflect.Descriptor instead.
func (*QueryMessageStruct) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{9}
}

func (x *QueryMessageStruct) GetNodeid() int32 {
	if x != nil {
		return x.Nodeid
	}
	return 0
}

func (x *QueryMessageStruct) GetMessageid() string {
	if x != nil {
		return x.Messageid
	}
	return ""
}

type QueryMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messagefound bool         `protobuf:"varint,1,opt,name=messagefound,proto3" json:"messagefound,omitempty"`
	Gmessage     *MsgFromNode `protobuf:"bytes,2,opt,name=gmessage,proto3" json:"gmessage,omitempty"`
}

func (x *QueryMessageRes) Reset() {
	*x = QueryMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_simplegossip_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMessageRes) ProtoMessage() {}

func (x *QueryMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_simplegossip_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMessageRes.ProtoReflect.Descriptor instead.
func (*QueryMessageRes) Descriptor() ([]byte, []int) {
	return file_simplegossip_proto_rawDescGZIP(), []int{10}
}

func (x *QueryMessageRes) GetMessagefound() bool {
	if x != nil {
		return x.Messagefound
	}
	return false
}

func (x *QueryMessageRes) GetGmessage() *MsgFromNode {
	if x != nil {
		return x.Gmessage
	}
	return nil
}

var File_simplegossip_proto protoreflect.FileDescriptor

var file_simplegossip_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73,
	0x69, 0x70, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x63, 0x76, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x63, 0x76, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x6f, 0x73,
	0x73, 0x69, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x63, 0x76, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x63, 0x76, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x73, 0x67, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x22,
	0x2e, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x22,
	0x3b, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x74, 0x68, 0x22, 0x6c, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x69,
	0x64, 0x12, 0x37, 0x0a, 0x09, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73,
	0x73, 0x69, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x09, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x6d, 0x73,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x6d, 0x73, 0x67,
	0x73, 0x22, 0x52, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x69,
	0x64, 0x22, 0x6c, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x67, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f,
	0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xb7, 0x03, 0x0a, 0x0d, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69,
	0x70, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x67,
	0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_simplegossip_proto_rawDescOnce sync.Once
	file_simplegossip_proto_rawDescData = file_simplegossip_proto_rawDesc
)

func file_simplegossip_proto_rawDescGZIP() []byte {
	file_simplegossip_proto_rawDescOnce.Do(func() {
		file_simplegossip_proto_rawDescData = protoimpl.X.CompressGZIP(file_simplegossip_proto_rawDescData)
	})
	return file_simplegossip_proto_rawDescData
}

var file_simplegossip_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_simplegossip_proto_goTypes = []interface{}{
	(*SubmitMessageStruct)(nil),  // 0: simplegossip.SubmitMessageStruct
	(*SubmitMessageRes)(nil),     // 1: simplegossip.SubmitMessageRes
	(*GossipMessageStruct)(nil),  // 2: simplegossip.GossipMessageStruct
	(*GossipMessageRes)(nil),     // 3: simplegossip.GossipMessageRes
	(*ResyncMessagesStruct)(nil), // 4: simplegossip.ResyncMessagesStruct
	(*MsgFromNode)(nil),          // 5: simplegossip.MsgFromNode
	(*ResyncMessagesRes)(nil),    // 6: simplegossip.ResyncMessagesRes
	(*ListMessageStruct)(nil),    // 7: simplegossip.ListMessageStruct
	(*ListMessageRes)(nil),       // 8: simplegossip.ListMessageRes
	(*QueryMessageStruct)(nil),   // 9: simplegossip.QueryMessageStruct
	(*QueryMessageRes)(nil),      // 10: simplegossip.QueryMessageRes
}
var file_simplegossip_proto_depIdxs = []int32{
	5,  // 0: simplegossip.ResyncMessagesRes.gmessages:type_name -> simplegossip.MsgFromNode
	5,  // 1: simplegossip.QueryMessageRes.gmessage:type_name -> simplegossip.MsgFromNode
	0,  // 2: simplegossip.GossipService.SubmitMessage:input_type -> simplegossip.SubmitMessageStruct
	9,  // 3: simplegossip.GossipService.QueryMessage:input_type -> simplegossip.QueryMessageStruct
	7,  // 4: simplegossip.GossipService.ListMessage:input_type -> simplegossip.ListMessageStruct
	2,  // 5: simplegossip.GossipService.GossipMessage:input_type -> simplegossip.GossipMessageStruct
	4,  // 6: simplegossip.GossipService.ResyncMessages:input_type -> simplegossip.ResyncMessagesStruct
	1,  // 7: simplegossip.GossipService.SubmitMessage:output_type -> simplegossip.SubmitMessageRes
	10, // 8: simplegossip.GossipService.QueryMessage:output_type -> simplegossip.QueryMessageRes
	8,  // 9: simplegossip.GossipService.ListMessage:output_type -> simplegossip.ListMessageRes
	3,  // 10: simplegossip.GossipService.GossipMessage:output_type -> simplegossip.GossipMessageRes
	6,  // 11: simplegossip.GossipService.ResyncMessages:output_type -> simplegossip.ResyncMessagesRes
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_simplegossip_proto_init() }
func file_simplegossip_proto_init() {
	if File_simplegossip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_simplegossip_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitMessageStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipMessageStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResyncMessagesStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFromNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResyncMessagesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessageStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMessageStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_simplegossip_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_simplegossip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_simplegossip_proto_goTypes,
		DependencyIndexes: file_simplegossip_proto_depIdxs,
		MessageInfos:      file_simplegossip_proto_msgTypes,
	}.Build()
	File_simplegossip_proto = out.File
	file_simplegossip_proto_rawDesc = nil
	file_simplegossip_proto_goTypes = nil
	file_simplegossip_proto_depIdxs = nil
}
